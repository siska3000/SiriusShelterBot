import logging

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes

from handlers.base_handler import BaseHandler

logger = logging.getLogger(__name__)


class SocialMediaHandler(BaseHandler):
    @classmethod
    def register(cls, app, button_handler):
        button_handler.register_callback('socmed', cls.callback)

    @staticmethod
    async def callback(update: Update, context: ContextTypes.DEFAULT_TYPE):

        message_text = "–û—Å—å —Ç—É—Ç –≤–∏ –º–æ–∂–µ—Ç–µ –∑–Ω–∞–π—Ç–∏ –Ω–∞—à—ñ —Å–æ—Ü—ñ–∞–ª—å–Ω—ñ –º–µ—Ä–µ–∂—ñ:"

        social_media_buttons = [
            [
                InlineKeyboardButton("üåç –ù–∞—à –°–∞–π—Ç", url="https://dogcat.com.ua/"),
                InlineKeyboardButton("üì∏ Instagram", url="https://www.instagram.com/sirius.shelter/")
            ],
            [
                InlineKeyboardButton("üìò Facebook", url="https://www.facebook.com/Shelter.SIRIUS"),
                InlineKeyboardButton("üé∂ TikTok", url="https://www.tiktok.com/@sirius.shelter")
            ],
            # –†—è–¥–æ–∫ 3 - Twitter —Ç–∞ YouTube –º–µ–Ω—à –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–Ω—ñ –∞–±–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –∑–∞—Å—Ç–∞—Ä—ñ–ª–∏
            # –Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω—ñ, —Ä–æ–∑–∫–æ–º–µ–Ω—Ç—É–π—Ç–µ:
            # [
            #     InlineKeyboardButton("üê¶ Twitter", url="https://twitter.com/"), # –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è!
            #     InlineKeyboardButton("‚ñ∂Ô∏è YouTube", url="https://www.youtube.com/@sheltersirius569") # –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è!
            # ],
        ]

        menu_button = [
            [InlineKeyboardButton('–£ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é', callback_data='menu')]
        ]

        all_buttons = social_media_buttons + menu_button

        reply_markup = InlineKeyboardMarkup(all_buttons)

        if update.callback_query:
            try:
                await context.bot.delete_message(
                    chat_id=update.callback_query.message.chat_id,
                    message_id=update.callback_query.message.message_id
                )
            except Exception as e:
                logger.warning(f"Failed to delete previous message: {e}")

        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —Ç–µ–∫—Å—Ç–æ–º —Ç–∞ —ñ–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∞–º–∏
        try:
            await context.bot.send_message(
                chat_id=update.effective_chat.id,
                text=message_text,
                reply_markup=reply_markup,
                # parse_mode='MarkdownV2'
            )

        except Exception as e:
            logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Å–æ—Ü–º–µ—Ä–µ–∂/–∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤: {e}")
            await context.bot.send_message(
                chat_id=update.effective_chat.id,
                text="–ù–∞ –∂–∞–ª—å, –Ω–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –Ω–∞—à—ñ —Å–æ—Ü–º–µ—Ä–µ–∂—ñ —Ç–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∏. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.",
            )
