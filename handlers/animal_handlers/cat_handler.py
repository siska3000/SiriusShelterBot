from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes


from handlers.base_handler import BaseHandler


class CatHandler(BaseHandler):
    @classmethod
    def register(cls, app, button_handler):
        # –†–µ—î—Å—Ç—Ä—É—î–º–æ —Ç—ñ–ª—å–∫–∏ callback –±–µ–∑ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ CallbackQueryHandler
        button_handler.register_callback('cat', cls.callback)
        button_handler.register_callback('menu', cls.callback)

    @staticmethod
    async def callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
        keyboard = [
            [InlineKeyboardButton('–í—Å—ñ —Ç–≤–∞—Ä–∏–Ω–∏ üò∫üê∂', callback_data='allpets')],
            [
                InlineKeyboardButton('–ö–æ—Ç–∏ üò∫', callback_data='cat'),
                InlineKeyboardButton('–°–æ–±–∞–∫–∏ üê∂', callback_data='dog')
             ],
            # [InlineKeyboardButton('–§—ñ–ª—å—Ç—Ä–∏', callback_data='filter')],
            [InlineKeyboardButton('–£ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é', callback_data='menu')],
        ]

        reply_markup = InlineKeyboardMarkup(keyboard)

        if update.callback_query:
            await context.bot.delete_message(
                chat_id=update.callback_query.message.chat_id,
                message_id=update.callback_query.message.message_id
            )

        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text="–î–ª—è –ø–æ—á–∞—Ç–∫—É –æ–±–µ—Ä—ñ—Ç—å –≤–∏–¥ —É–ª—é–±–ª–µ–Ω—Ü—è",
            reply_markup=reply_markup
        )
